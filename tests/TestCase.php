<?php


namespace JBernavaPrah\EloquentBinaryCast\Tests;


use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Database\PostgresConnection;
use JBernavaPrah\EloquentBinaryCast\BinaryCast;

class TestCase extends \PHPUnit\Framework\TestCase
{

    protected \Illuminate\Database\Eloquent\Model $model;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->model = new class extends \Illuminate\Database\Eloquent\Model {

        };
    }

    public function testConnectionDifferentFromPostgresql()
    {


        $binaryTest = new BinaryCast();
        $existingObjectMock = Mockery::mock($binaryTest);
        $existingObjectMock->shouldReceive('someAction')->andReturn('foobar');

        $this->assertFalse($this->model->getConnection() instanceof PostgresConnection);

        $this->assertEquals('some_value', $binaryTest->get($this->model, 'some_key', 'some_value', []));;
        $this->assertEquals('some_value', $binaryTest->set($this->model, 'some_key', 'some_value', []));;


    }

}